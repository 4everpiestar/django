import openpyxl
import pandas as pd
import os
import datetime
#from IPython.display import display

#USE panda to report the matrix
def print_full(x):
    df = pd.DataFrame(x)
    pd.set_option('display.max_rows', 2000)
    pd.set_option('display.max_columns', 20)
    display(df)
    
def importexcel(excelname, sheetname):
    wb = openpyxl.load_workbook(str(excelname)+".xlsx")
    ws = wb.get_sheet_by_name(str(sheetname))
    dataset = []
    for i in range(0, ws.max_row):
        row = []
        a = ws[i+1][1].value
        if(a == None):
            break
        for j in range(0, ws.max_column):
            row.append(ws[i+1][j].value)
        dataset.append(row)
    return dataset
    
mydata = importexcel('ma', '10ma')

trade =[[0 for x in range(9)] for y in range(len(mydata))]
trade[0][0] = "date"
trade[0][1] = "buy"
trade[0][2] = "hold"
trade[0][3] = "sell"
trade[0][4] = "number"
trade[0][5] = "value"
trade[0][6] = "period_return"
trade[0][7] = "closeprice"
trade[0][8] = "10ma"

for i in range(1, len(mydata)):
    trade[i][0] = mydata[i][0]
    trade[i][7] = mydata[i][1]
    
for i in range(10, len(trade)):
    temp = 0
    for j in range(0, 10):
        temp = temp + trade[i-j][7]
    trade[i][8] = temp / 10
    
for i in range(10, len(trade)):
    if(trade[i][7] > trade[i][8])and(trade[i-1][2]==0):
        trade[i][1] = 1
        trade[i][2] = 1
        trade[i][3] = 0
    elif(trade[i][7] < trade[i][8])and(trade[i-1][2]==1):
        trade[i][1] = 0
        trade[i][2] = 0
        trade[i][3] = 1
    elif(trade[i-1][2]>0):
        trade[i][1] = 0
        trade[i][2] = 1
        trade[i][3] = 0
